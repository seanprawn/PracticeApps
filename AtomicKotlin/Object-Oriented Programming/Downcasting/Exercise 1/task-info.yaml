type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 80
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 80
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      interface Base {
        fun f()
      }

      class Derived1 : Base {
        override fun f() = trace("Derived1.f()")
        fun g() = trace("Derived1.g()")
      }

      class Derived2 : Base {
        override fun f() = trace("Derived2.f()")
        fun h() = trace("Derived2.h()")
      }

      fun checkAndCall(b: Base) {
        b.f() // Polymorphic call
        when(b) {
          is Derived1 -> b.g()
          is Derived2 -> b.h()
        }
      }

      fun main() {
        checkAndCall(Derived1()) // Upcast
        checkAndCall(Derived2()) // Upcast
        trace eq """
          Derived1.f()
          Derived1.g()
          Derived2.f()
          Derived2.h()
        """
      }
  text: |-
    // DownCasting/DownCastEx1.kt
    package downcastingExercise1
    import atomictest.*

    // TODO
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package downcastingExercise1

    import org.junit.Test
    import util.unimplementedTest

    class TestDowncastingExercise1 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 95
    length: 14
    placeholder_text: class SumChars
    initial_state:
      length: 14
      offset: 95
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class SumChars(text: String) {
        val sum: Int
        init {
          fun calc() = text.sumBy { it.toInt() }
          sum = calc()
        }
      }
  - offset: 126
    length: 31
    placeholder_text: // SumChars("What?").sum eq 467
    initial_state:
      length: 31
      offset: 126
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: SumChars("What?").sum eq 467
  text: |-
    // ComplexConstructors/Exercise2.kt
    package complexConstructorsExercise2
    import atomictest.eq

    class SumChars

    fun main() {
      // SumChars("What?").sum eq 467
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |
    package complexConstructorsExercise2

    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.*
    import kotlin.reflect.full.memberProperties
    import kotlin.test.assertEquals

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestComplexConstructorsExercise2 {

      @Test
      fun `#01 SumChars class structure`() {
        loadClass("complexConstructorsExercise2", "SumChars")
            .apply {
              assertConstructorNumber(1)
              assertParametersOfFirstConstructor(
                  "text" to String::class
              )
              assertMemberProperty("sum", Int::class)
            }
      }

      @Test
      fun `#02 SumChars initialisation block`() {
        val sumCharsClass = loadClass("complexConstructorsExercise2", "SumChars")
        val sumCharsInstance = sumCharsClass.createInstance("What?")
        assertEquals(
            expected = 467,
            actual = sumCharsClass.memberProperties.firstOrNull { it.name == "sum" }?.call(sumCharsInstance),
            message = "SumChars member property 'sum' should be equal to 467"
        )
      }
    }
  learner_created: false
status: Unchecked
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 114
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 114
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      fun main() {
        Transport::class.sealedSubclasses
          .map { it.simpleName }
          .forEach { trace(it) }
        trace eq """
          Train
          Bus
          Tram
          Plane
        """
      }
  text: |-
    // SealedClasses/SealedEx2.kt
    package sealedClassesExercise2
    import sealedClassesExercise1.*
    import atomictest.*

    // TODO
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |
    package sealedClassesExercise2
    import atomictest.trace
    import org.junit.Test
    import util.TestTrace
    import util.loadClass
    import util.loadTraceContent
    import kotlin.test.assertEquals

    class TestSealedClassesExercise2 : TestTrace() {

        @Test
        fun `#01 main iterates through sealed subclasses of transport`() {
            loadClass("sealedClassesExercise1", "Transport")
                .sealedSubclasses
                .map { it.simpleName }
                .forEach { trace(it) }

            assertEquals(
                    message = "Incorrect result of main() invocation",
                    actual = loadTraceContent().sorted(),
                    expected = listOf(
                            "Bus",
                            "Plane",
                            "Train",
                            "Tram"
                    )
            )
        }
    }
  learner_created: false
status: Unchecked
record: -1

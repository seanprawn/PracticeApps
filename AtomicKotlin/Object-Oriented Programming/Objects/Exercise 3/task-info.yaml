type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 234
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 234
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class Jungle : AdventureGame.Environment {
        object Factory {
          fun create() = Jungle()
        }
      }

      class Monkey : AdventureGame.Character {
        object Factory {
          fun create() = Monkey()
        }
        override fun toString() = "Monkey"
      }

      class Snake : AdventureGame.Character {
        object Factory {
          fun create() = Snake()
        }
        override fun toString() = "Snake"
      }

      object MonkeysVsSnakes : AdventureGame {
        override val environment =
          Jungle.Factory.create()
        override val characters =
          mutableListOf<AdventureGame.Character>()
        override fun populate() {
          characters.add(Monkey.Factory.create())
          characters.add(Snake.Factory.create())
        }
      }

      fun main() {
        MonkeysVsSnakes.populate()
        MonkeysVsSnakes.characters eq
          "[Monkey, Snake]"
      }
  text: |-
    // Objects/ObjectEx3.kt
    package objectsExercise3
    import atomictest.*

    interface AdventureGame {
      interface Environment
      interface Character
      val environment: Environment
      val characters: MutableList<Character>
      fun populate()
    }

    // TODO
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package objectsExercise3

    import org.junit.Test
    import util.unimplementedTest

    class TestObjectsExercise3 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1

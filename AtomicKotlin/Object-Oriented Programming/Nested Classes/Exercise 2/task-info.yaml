type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 82
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 82
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      abstract class Cleanable(val id: String) {
        open val parts: List<Cleanable> = listOf()
        fun clean(): String =
          "${parts.map(Cleanable::clean)} $id clean\n"
      }

      class House: Cleanable("House") {
        override val parts = listOf(
          Bedroom("Master Bedroom"),
          Bedroom("Guest Bedroom")
        )
        class Bedroom(id: String): Cleanable(id) {
          override val parts =
            listOf(Closet(), Bathroom())
          class Closet: Cleanable("Closet") {
            override val parts = listOf(
              Shelf(), Shelf(), Drawer(), Drawer()
            )
            class Shelf: Cleanable("Shelf")
            class Drawer: Cleanable("Drawer")
          }
          class Bathroom: Cleanable("Bathroom") {
            override val parts =
              listOf(Toilet(), Sink(), Bathtub())
            class Toilet: Cleanable("Toilet")
            class Sink: Cleanable("Sink")
            class Bathtub: Cleanable("Bathtub")
          }
        }
      }

      fun main() {
        House().clean().trim() eq """
        [[[[] Shelf clean
        , [] Shelf clean
        , [] Drawer clean
        , [] Drawer clean
        ] Closet clean
        , [[] Toilet clean
        , [] Sink clean
        , [] Bathtub clean
        ] Bathroom clean
        ] Master Bedroom clean
        , [[[] Shelf clean
        , [] Shelf clean
        , [] Drawer clean
        , [] Drawer clean
        ] Closet clean
        , [[] Toilet clean
        , [] Sink clean
        , [] Bathtub clean
        ] Bathroom clean
        ] Guest Bedroom clean
        ] House clean
        """.trimIndent()
      }
  text: |-
    // NestedClasses/NestedEx2.kt
    package nestedClassesExercise2
    import atomictest.*

    // TODO
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package nestedClassesExercise2

    import org.junit.Test
    import util.unimplementedTest

    class TestNestedClassesExercise2 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1

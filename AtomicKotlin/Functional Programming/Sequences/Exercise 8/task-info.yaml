type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 154
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 154
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      current ->
          val next = previous + current
          previous = current
          next
  text: |-
    // Sequences/Task8.kt
    package sequencesExercise8
    import atomictest.eq

    fun fibonacci(): Sequence<Int> {
      var previous = 1
      return generateSequence(0) { TODO()
      }
    }

    fun main() {
      fibonacci().take(10).toList() eq
        listOf(0, 1, 1, 2, 3, 5, 8, 13, 21, 34)
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package sequencesExercise8

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestSequencesExercise8 {
      @Test(timeout = TIMEOUT)
      fun test1Sample() {
        Assert.assertEquals("Wrong result for sample",
          listOf(0, 1, 1, 2, 3, 5, 8, 13, 21, 34),
          fibonacci().take(10).toList())
      }
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+More+Library+Functions+%2F+Exercise2
status: Unchecked
record: -1

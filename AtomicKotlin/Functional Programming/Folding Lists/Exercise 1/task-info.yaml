type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 109
    length: 23
    placeholder_text: TODO("fold(0) { ??? }")
    initial_state:
      length: 23
      offset: 109
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      fold(0) { length, _ ->
          length + 1
        }
  text: |-
    // FoldingLists/Task1.kt
    package foldingListsExercise1
    import atomictest.eq

    fun <T> List<T>.size(): Int =
      TODO("fold(0) { ??? }")

    fun main() {
      val list = listOf(1, 2, 3)
      list.size() eq 3
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package foldingListsExercise1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestFoldingListsExercise1 {
      private fun <T> checkSize(list: List<T>) {
        Assert.assertEquals("Wrong 'size' for $list:", list.size, list.size())
      }

      @Test(timeout = TIMEOUT)
      fun test1Sample() = checkSize(listOf(1, 2, 3))

      @Test(timeout = TIMEOUT)
      fun test2() = checkSize(listOf('a', 'b', 'c', 'd', 'e'))

      @Test(timeout = TIMEOUT)
      fun test3() = checkSize(listOf<Int>())

      @Test(timeout = TIMEOUT)
      fun test4() = checkSize(listOf(null))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+Folding+Lists+%2F+Exercise1
status: Unchecked
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 127
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 127
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: it.length
  text: |-
    // Lambdas/Task1.kt
    package lambdasExercise1
    import atomictest.eq

    fun transform(list: List<String>): List<Int> =
      list.map { TODO() }

    fun main() {
      transform(listOf("abc", "ab")) eq listOf(3, 2)
      transform(listOf("", "abdef", "x")) eq listOf(0, 5, 1)
      transform(listOf("123456789")) eq listOf(9)
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package lambdasExercise1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestLambdasExercise1 {
      private fun checkList(list: List<String>) {
        Assert.assertEquals("Wrong result for $list:", transform(list), list.map { it.length })
      }

      @Test(timeout = TIMEOUT)
      fun test1Sample() = checkList(listOf("abc", "ab"))

      @Test(timeout = TIMEOUT)
      fun test2Sample() = checkList(listOf("", "abdef", "x"))

      @Test(timeout = TIMEOUT)
      fun test3Sample() = checkList(listOf("123456789"))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+Lambdas+%2F+Exercise1
status: Unchecked
record: -1

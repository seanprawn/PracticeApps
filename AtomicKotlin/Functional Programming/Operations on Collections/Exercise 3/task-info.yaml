type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 134
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 134
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: list.filterNotNull().sum()
  text: |-
    // OperationsOnCollections/Task3.kt
    package operationsOnCollectionsExercise3
    import atomictest.eq

    fun sum(list: List<Int?>): Int =
      TODO()

    fun main() {
      sum(listOf(1, 2, null)) eq 3
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package operationsOnCollectionsExercise3

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestOperationsOnCollectionsExercise3 {
      private fun check(list: List<Int?>) {
        Assert.assertEquals("Wrong result for $list",
          list.filterNotNull().sum(),
          sum(list))
      }

      @Test(timeout = TIMEOUT)
      fun test1Sample() = check(listOf(1, 2, null))

      @Test(timeout = TIMEOUT)
      fun test2Sample() = check(listOf(null, null, null))

      @Test(timeout = TIMEOUT)
      fun test3() = check(listOf(1, 2, 3))

      @Test(timeout = TIMEOUT)
      fun test4() = check(listOf(1, null, 1, null, 1, null, 1, null))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+Operations+on+Collections+%2F+Exercise3
status: Unchecked
record: -1

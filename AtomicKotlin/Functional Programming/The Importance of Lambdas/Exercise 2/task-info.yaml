type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 154
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 154
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: strings.filter { it.isNotBlank() }
  text: |-
    // ImportanceOfLambdas/Task2.kt
    package theImportanceOfLambdasExercise2
    import atomictest.eq

    fun filterNonBlank(strings: List<String>): List<String> =
      TODO()

    fun main() {
      filterNonBlank(listOf("", "a", "  ")) eq listOf("a")
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package theImportanceOfLambdasExercise2

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestTheImportanceOfLambdasExercise2 {
      private fun checkList(strings: List<String>) {
        Assert.assertEquals("Wrong result for $strings",
          strings.filter { it.isNotBlank() },
          filterNonBlank(strings))
      }

      @Test(timeout = TIMEOUT)
      fun test1Sample() = checkList(listOf("", "a", "  "))

      @Test(timeout = TIMEOUT)
      fun test2() = checkList(listOf("a", "  ", "b", "     ", "c"))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Functional+Programming+%2F+The+Importance+of+Lambdas+%2F+Exercise2
status: Unchecked
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 116
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 116
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: this % 2 == 1
  - offset: 152
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 152
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: '!isOdd()'
  text: |-
    // ExtensionFunctions/Task2.kt
    package extensionFunctionsExercise2
    import atomictest.eq

    fun Int.isOdd(): Boolean = TODO()

    fun Int.isEven(): Boolean = TODO()

    fun main() {
      1.isOdd() eq true
      2.isEven() eq true
      13.isEven() eq false
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package extensionFunctionsExercise2

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestExtensionFunctionsExercise2 {
      private fun checkQuality(
        number: Int,
        message: String,
        function: Function1<Int, Boolean>,
        check: Boolean
      ) {
        Assert.assertEquals("$number should${if (check) "" else "n't"} be $message:", check, function(number))
      }

      @Test(timeout = TIMEOUT)
      fun test1Sample() = checkQuality(1, "odd", Int::isOdd, true)

      @Test(timeout = TIMEOUT)
      fun test2Sample() = checkQuality(2, "even", Int::isEven, true)

      @Test(timeout = TIMEOUT)
      fun test3Sample() = checkQuality(13, "even", Int::isEven, false)

      @Test(timeout = TIMEOUT)
      fun test4() = checkQuality(14, "odd", Int::isOdd, false)

      @Test(timeout = TIMEOUT)
      fun test5() = checkQuality(12897, "even", Int::isEven, false)

      @Test(timeout = TIMEOUT)
      fun test6() = checkQuality(12897, "odd", Int::isOdd, true)
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Usability+%2F+Extension+Functions+%2F+Exercise2
status: Unchecked
record: -1

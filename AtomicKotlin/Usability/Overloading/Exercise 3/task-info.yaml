type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 508
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 508
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: myJoinToString(separator, prefix, "")
  - offset: 585
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 585
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: myJoinToString(separator, "", "")
  - offset: 645
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 645
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: myJoinToString(", ", "", "")
  text: |-
    // Overloading/Task3.kt
    package overloadingExercise3
    import atomictest.eq

    fun List<Int>.joinToString(
      separator: String = ", ",
      prefix: String = "",
      postfix: String = ""
    ): String {
      return joinTo(StringBuilder(), separator, prefix, postfix).toString()
    }

    fun List<Int>.myJoinToString(
      separator: String,
      prefix: String,
      postfix: String
    ): String {
      return "MY: " + joinToString(separator, prefix, postfix)
    }

    fun List<Int>.myJoinToString(separator: String, prefix: String): String {
      return TODO()
    }

    fun List<Int>.myJoinToString(separator: String): String {
      return TODO()
    }

    fun List<Int>.myJoinToString(): String {
      return TODO()
    }

    /*
    fun List<Int>.myJoinToString(prefix: String, postfix: String): String {
      return TODO()
    }
    */

    fun main() {
      val list = listOf(1, 2, 3)
      list.myJoinToString() eq
        "MY: 1, 2, 3"
      list.myJoinToString(separator = "|") eq
        "MY: 1|2|3"
      list.myJoinToString(separator = "..", prefix = "Numbers: ") eq
        "MY: Numbers: 1..2..3"
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package overloadingExercise3

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestOverloadingExercise3 {

      private fun testList(actual: String, expected: String) {
        Assert.assertEquals(
          "Wrong result: ", "MY: $expected", actual)
      }

      @Test(timeout = TIMEOUT)
      fun test1Sample() {
        val list = listOf(1, 2, 3)
        testList(list.myJoinToString(), "1, 2, 3")
        testList(list.myJoinToString("|"), "1|2|3")
        testList(list.myJoinToString("..", "List: "), "List: 1..2..3")
      }

      @Test(timeout = TIMEOUT)
      fun test2() = testList(
        listOf(1, 2, 3, 4, 5, 6).myJoinToString(""),
        "123456"
      )

      @Test(timeout = TIMEOUT)
      fun test3() = testList(
        listOf(1, 2, 3, 4).myJoinToString(),
        "1, 2, 3, 4"
      )

      @Test(timeout = TIMEOUT)
      fun test4() = testList(
        listOf(1, 2, 3, 4).myJoinToString(",", "##"),
        "##1,2,3,4"
      )
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Usability+%2F+Overloading+%2F+Exercise1
status: Unchecked
record: -1

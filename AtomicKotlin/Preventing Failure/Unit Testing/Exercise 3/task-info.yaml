type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 196
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 196
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class SpaceShipControlsTest {
        val velocity = 10
        val controls = SpaceShipControls()
        init { println("init") }
        @Test
        fun up() {
          "up 10" aeq controls.up(velocity)
        }
        @Test
        fun down() {
          "down 10" aeq controls.down(velocity)
        }
        @Test
        fun left() {
          "left 10" aeq controls.left(velocity)
        }
        @Test
        fun right() {
          "right 10" aeq controls.right(velocity)
        }
        @Test
        fun forward() {
          "forward 10" aeq controls.forward(velocity)
        }
        @Test
        fun back() {
          "back 10" aeq controls.back(velocity)
        }
        @Test
        fun turboBoost() {
          "turbo boost" aeq controls.turboBoost()
        }
      }
  text: |-
    // Tests/unittesting/UnitTestingSoln3.kt
    package unitTestingExercise3
    import classdelegation.SpaceShipControls
    import kotlin.test.*

    infix fun <T> T.aeq(actual: T) =
      assertEquals(this, actual)

    // TODO
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package unitTestingExercise3

    import org.junit.Test
    import util.unimplementedTest

    class TestUnitTestingExercise3 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 144
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 144
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      val result = mutableListOf<String>()
        for (list in listOfLists) {
          result.addAll(list)
        }
        return result
  text: |-
    // Varargs/Task4.kt
    package variableArgumentListsExercise4
    import atomictest.eq

    fun flatten(listOfLists: List<List<String>>): List<String> {
      TODO()
    }

    fun main() {
      val listOfLists = listOf(listOf("a", "b"), listOf("c", "d"))
      flatten(listOfLists) eq listOf("a", "b", "c", "d")
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package variableArgumentListsExercise4

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestVariableArgumentListsExercise4 {

      private fun checkFlatten(vararg args: List<String>) {
        val list = args.toList()
        Assert.assertEquals("Incorrect result for $list.", list.flatten(), flatten(list))
      }

      @Test(timeout = TIMEOUT)
      fun test1SameList() = checkFlatten(listOf("a", "b"), listOf("c"))

      @Test(timeout = TIMEOUT)
      fun test2SmallerList() = checkFlatten(listOf("a"))

      @Test(timeout = TIMEOUT)
      fun test3FixedNumberOfElements() = checkFlatten(listOf("a", "b"), listOf("c", "d"))

      @Test(timeout = TIMEOUT)
      fun test4ExtraElements() = checkFlatten(listOf("a", "b"), listOf("c", "d"), listOf("e"))
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Introduction+to+Objects+%2F+vararg+Arguments+%2F+Exercise2
status: Unchecked
record: -1

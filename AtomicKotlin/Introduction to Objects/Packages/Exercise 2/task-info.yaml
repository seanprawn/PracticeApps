type: edu
files:
- name: test/Tests.kt
  visible: false
  text: |-
    package packagesExercise2

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.*
    import kotlin.reflect.full.createInstance

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestPackagesExercise2 {
      @Test(timeout = TIMEOUT)
      fun test1Val() {
        val aaaFileFacade = loadFileFacade("aaa", "aaa")
        val property = loadToplevelPropertyGetter(aaaFileFacade, "x")
        val actual = property.invoke(Object())
        Assert.assertEquals("Expected 'val x = 10' in package 'aaa'", 10, actual)
      }

      @Test(timeout = TIMEOUT)
      fun test2Fun() {
        val aaaFileFacade = loadFileFacade("aaa", "aaa")
        val function = loadToplevelFunction(aaaFileFacade, "fa")
        val actual = function.invoke(Object(), 10)
        Assert.assertEquals("Wrong result for 'fa(10)'", 100, actual)
      }

      @Test(timeout = TIMEOUT)
      fun test3Class() {
        val kClass = loadClass("aaa", "K")
        val kInstance = kClass.createInstance()
        Assert.assertEquals("Wrong `toString` for `K()`", "K", kInstance.toString())

      }

      @Test(timeout = TIMEOUT)
      fun test4BbbPackage() {
        val bbbFileFacade = loadFileFacade(packageName = "bbb", fileName = "bbb")
        val gFun = loadToplevelFunction(bbbFileFacade, "g")
        val actual = gFun.invoke(Object(), 2)

        Assert.assertEquals("Wrong result for calling 'bbb.g(2)'", "K 20", actual)
      }

      @Test(timeout = TIMEOUT)
      fun test5CccPackage() {
        runAndCheckSystemOutput("Wrong output for calling 'main' in 'ccc'",
          "K 10") { ccc.main() }
      }
    }
  learner_created: false
- name: src/bbb.kt
  visible: true
  placeholders:
  - offset: 31
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 31
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      import aaa.*

      fun g(i: Int): String = "${K()} ${fa(i)}"
  text: |-
    // Packages/bbb.kt
    package bbb
    // TODO
  learner_created: false
- name: src/aaa.kt
  visible: true
  placeholders:
  - offset: 32
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 32
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      val x = 10

      fun fa(i: Int) = i * x

      class K {
        override fun toString() = "K"
      }
  text: |-
    // Packages/aaa.kt
    package aaa

    // TODO
  learner_created: false
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 33
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 33
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: import bbb.*
  - offset: 57
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 57
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: println(g(1))
  text: |-
    // Packages/Task2.kt
    package ccc
    // TODO

    fun main() {
      // TODO
    }
  learner_created: false
status: Unchecked
record: -1

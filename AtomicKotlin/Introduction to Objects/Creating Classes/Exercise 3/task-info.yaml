type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 62
    length: 21
    placeholder_text: // create Robot class
    initial_state:
      length: 21
      offset: 62
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class Robot {
        fun right(steps: Int) {
          println("Right $steps steps")
        }

        fun left(steps: Int) {
          println("Left $steps steps")
        }

        fun down(steps: Int) {
          println("Down $steps steps")
        }

        fun up(steps: Int) {
          println("Up $steps steps")
        }
      }
  text: |-
    // CreatingClasses/Task3.kt
    package creatingClassesExercise3

    // create Robot class

    fun main() {
    /*
      val robot = Robot()
      robot.goUp(11)
    */
    }
    /* Expected output:
    Up 11 steps
    */
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package creatingClassesExercise3

    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT
    import util.runAndCheckSystemOutput
    import util.loadClass
    import util.loadMemberFunction
    import kotlin.reflect.full.createInstance

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestCreatingClassesExercise3 {

      @Test(timeout = TIMEOUT)
      fun testRobot() {
        val robotClass = loadClass("creatingClassesExercise3", "Robot")
        robotClass.createInstance()
      }

      private fun testDirection(direction: String, steps: Int) {
        val robotClass = loadClass("creatingClassesExercise3", "Robot")
        val robot = robotClass.createInstance()
        val goMethod = loadMemberFunction(robotClass, direction)

        runAndCheckSystemOutput("Incorrect output for '$direction' method",
          "${direction.capitalize()} $steps steps") {
          goMethod.call(robot, steps)
        }
      }

      @Test(timeout = TIMEOUT)
      fun testRight() = testDirection("right", 11)

      @Test(timeout = TIMEOUT)
      fun testLeft() = testDirection("left", 37)

      @Test(timeout = TIMEOUT)
      fun testUp() = testDirection("up", 4)

      @Test(timeout = TIMEOUT)
      fun testDown() = testDirection("down", 8)
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Introduction+to+Objects+%2F+Creating+Classes+%2F+Exercise1
status: Unchecked
record: -1

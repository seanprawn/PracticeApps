type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 62
    length: 7
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 62
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class Giraffe {
        fun displayID() {
          println(toString().substringAfter('@'))
        }
      }
  text: |-
    // CreatingClasses/Task2.kt
    package creatingClassesExercise2

    // TODO

    fun main() {
      /*
      val giraffe1 = Giraffe()
      val giraffe2 = Giraffe()
      val giraffe3 = Giraffe()
      giraffe1.displayID()
      giraffe2.displayID()
      giraffe3.displayID()
      */
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package creatingClassesExercise2

    import org.junit.Assert
    import org.junit.Test
    import util.TIMEOUT
    import util.loadClass
    import util.loadMemberFunction
    import util.runAndGetSystemOutput
    import kotlin.reflect.full.createInstance

    class TestCreatingClassesExercise2 {
      @Test(timeout = TIMEOUT)
      fun testSolution() {
        val giraffeClass = loadClass("creatingClassesExercise2", "Giraffe")
        val giraffeInstance = giraffeClass.createInstance()

        val displayIDMethod = loadMemberFunction(giraffeClass, "displayID")

        val output = runAndGetSystemOutput {
          displayIDMethod.call(giraffeInstance)
        }

        val message = "The 'displayID' function should display the address of the object, " +
          "something like '30c7da1e'\n" +
          "was: $output"
        Assert.assertTrue(message, output.trim().toIntOrNull(16) != null)
      }
    }
  learner_created: false
status: Unchecked
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 67
    length: 48
    placeholder_text: |2-
       {
        var x = 0
        var y = 0
        val fieldSize = 100
    initial_state:
      length: 48
      offset: 67
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: '(val fieldSize: Int, var x: Int, var y: Int) {'
  text: |-
    // Constructors/Task2.kt
    package constructorsExercise2

    class Robot {
      var x = 0
      var y = 0
      val fieldSize = 100

      fun crossBoundary(coordinate: Int): Int {
        val inBounds = coordinate % fieldSize
        return if (inBounds < 0) {
          fieldSize + inBounds
        } else {
          inBounds
        }
      }

      fun right(steps: Int) {
        x += steps
        x = crossBoundary(x)
      }

      fun left(steps: Int) {
        x -= steps
        x = crossBoundary(x)
      }

      fun down(steps: Int) {
        y += steps
        y = crossBoundary(y)
      }

      fun up(steps: Int) {
        y -= steps
        y = crossBoundary(y)
      }

      fun getLocation(): String = "($x, $y)"
    }

    fun main() {
    /*
        val robot = Robot(10, 1, 1)
        println(robot.getLocation())
        robot.up(2)
        println(robot.getLocation())
        robot.left(10)
        println(robot.getLocation())
    */
    }
    /* Expected output:
    (1, 1)
    (1, 9)
    (1, 9)
    */
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package constructorsExercise2

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.*

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestConstructorsExercise2 {
      class RobotHandler(fieldSize: Int, var x: Int, var y: Int) {
        val robot: Robot = run {
          val robotClass = loadClass("constructorsExercise2", "Robot")
              .apply {
                assertConstructorNumber(1)
                assertParametersOfFirstConstructor(
                    "fieldSize" to Int::class,
                    "x" to Int::class,
                    "y" to Int::class
                )
              }
          robotClass.createInstance(fieldSize, x, y) as Robot
        }
        val loggedMovements = StringBuilder()

        fun goRight(steps: Int) {
          robot.right(steps)
          loggedMovements.appendLine("right($steps)")
        }

        fun goLeft(steps: Int) {
          robot.left(steps)
          loggedMovements.appendLine("left($steps)")

        }

        fun goDown(steps: Int) {
          robot.down(steps)
          loggedMovements.appendLine("down($steps)")

        }

        fun goUp(steps: Int) {
          robot.up(steps)
          loggedMovements.appendLine("up($steps)")
        }
      }

      private fun testMovements(location: String, fieldSize: Int, x: Int, y: Int,
                                movements: RobotHandler.() -> Unit) {
        val robotHandler = RobotHandler(fieldSize, x, y)
        robotHandler.movements()
        val actualLocation = robotHandler.robot.getLocation()
        val message = if (robotHandler.loggedMovements.isEmpty()) {
          "Initial location of the robot should be ($x, $y)"
        } else {
          "Starting location: ($x, $y), field size: $fieldSize.\n" +
              "Wrong location after:\n" + robotHandler.loggedMovements
        }
        Assert.assertEquals(message, location, actualLocation)
      }

      @Test(timeout = TIMEOUT)
      fun test1Initial() = testMovements("(2, 3)", 10, 2, 3) {}

      @Test(timeout = TIMEOUT)
      fun test2Right() = testMovements("(3, 3)", 10, 2, 3) {
        goRight(1)
      }

      @Test(timeout = TIMEOUT)
      fun test3Circle() = testMovements("(2, 3)", 10, 2, 3) {
        goRight(10)
        goLeft(10)
        goDown(10)
        goUp(10)
      }
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Introduction+to+Objects+%2F+Constructors+%2F+Exercise1
status: Unchecked
record: -1

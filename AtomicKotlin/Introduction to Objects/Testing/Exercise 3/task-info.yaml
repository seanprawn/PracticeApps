type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 135
    length: 5
    placeholder_text: x * x
    initial_state:
      length: 5
      offset: 135
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: x * y
  - offset: 186
    length: 15
    placeholder_text: h / 2 * (x + y)
    initial_state:
      length: 15
      offset: 186
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: h / 2.0 * (x + y)
  - offset: 282
    length: 17
    placeholder_text: // add more tests
    initial_state:
      length: 17
      offset: 282
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      rectangleArea(2, 2) eq 4
        rectangleArea(5, 4) eq 20
        trapezoidArea(2, 2, 4) eq 8.0
        trapezoidArea(3, 4, 1) eq 3.5
  text: |-
    // Testing/Task3.kt
    package testingExercise3
    import atomictest.eq

    fun squareArea(x: Int) = x * x

    fun rectangleArea(x: Int, y: Int) = x * x

    fun trapezoidArea(x: Int, y: Int, h: Int) = h / 2 * (x + y)

    fun main() {
      squareArea(1) eq 1
      squareArea(2) eq 4
      squareArea(5) eq 25
      // add more tests
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package testingExercise3

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestTestingExercise3 {

      @Test(timeout = TIMEOUT)
      fun test1SquareArea() = Assert.assertEquals(
        """Calling "squareArea(1) eq 1" fails:""", 1, squareArea(1))

      @Test(timeout = TIMEOUT)
      fun test2SquareArea() = Assert.assertEquals(
        """Calling "squareArea(2) eq 4" fails:""", 4, squareArea(2))

      @Test(timeout = TIMEOUT)
      fun test3SquareArea() = Assert.assertEquals(
        """Calling "squareArea(5) eq 25" fails:""", 25, squareArea(5))

      @Test(timeout = TIMEOUT)
      fun test4RectangleArea() = Assert.assertEquals(
        """Calling "rectangleArea(2, 2) eq 4" fails:""", 4, rectangleArea(2, 2))

      @Test(timeout = TIMEOUT)
      fun test5RectangleArea() = Assert.assertEquals(
        """Calling "rectangleArea(5, 4) eq 20" fails:""", 20, rectangleArea(5, 4))

      @Test(timeout = TIMEOUT)
      fun test6TrapezoidArea() = Assert.assertEquals(
        """Calling "trapezoidArea(2, 2, 4) eq 8.0" fails:""",
        8.0, trapezoidArea(2, 2, 4).toDouble(), 0.00000001)

      @Test(timeout = TIMEOUT)
      fun test7TrapezoidArea() = Assert.assertEquals(
        """Calling "trapezoidArea(3, 4, 1) eq 3.5" fails:""",
        3.5, trapezoidArea(3, 4, 1).toDouble(), 0.00000001)
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Introduction+to+Objects+%2F+Testing+%2F+Exercise1
status: Unchecked
record: -1

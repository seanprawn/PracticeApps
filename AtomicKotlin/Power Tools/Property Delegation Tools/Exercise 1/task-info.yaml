type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 108
    length: 19
    placeholder_text: class Configuration
    initial_state:
      length: 19
      offset: 108
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class Configuration(
        val map: MutableMap<String, Any?>
      ) {
        var user: String by map
        var id: String by map
        var project: String by map
      }
  - offset: 142
    length: 329
    placeholder_text: |-
      /*
        val config = Configuration(mutableMapOf(
          "user" to "Luciano",
          "id" to "Ramalho47",
          "project" to "MyLittlePython",
        ))
        config.project eq "MyLittlePython"
        config.user = "Crocubot"
        config.id = "C137"
        config.project = "WhirlyDirly"
        config.map eq "{user=Crocubot, " +
          "id=C137, project=WhirlyDirly}"
      */
    initial_state:
      length: 329
      offset: 142
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |2-
        val config = Configuration(mutableMapOf(
          "user" to "Luciano",
          "id" to "Ramalho47",
          "project" to "MyLittlePython",
        ))
        config.project eq "MyLittlePython"
        config.user = "Crocubot"
        config.id = "C137"
        config.project = "WhirlyDirly"
        config.map eq "{user=Crocubot, " +
          "id=C137, project=WhirlyDirly}"
  text: |-
    // PropertyDelegation/PropDelegationSoln1.kt
    package propertyDelegationToolsExercise1
    import atomictest.eq

    class Configuration

    fun main() {
    /*
      val config = Configuration(mutableMapOf(
        "user" to "Luciano",
        "id" to "Ramalho47",
        "project" to "MyLittlePython",
      ))
      config.project eq "MyLittlePython"
      config.user = "Crocubot"
      config.id = "C137"
      config.project = "WhirlyDirly"
      config.map eq "{user=Crocubot, " +
        "id=C137, project=WhirlyDirly}"
    */
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package propertyDelegationToolsExercise1

    import org.junit.Test
    import util.unimplementedTest

    class TestPropertyDelegationToolsExercise1 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 97
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 97
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      if (number > 0)
          "positive"
        else if (number < 0)
          "negative"
        else
          "zero"
  text: |-
    // IfExpressions/Task1.kt
    package ifExpressionsExercise1

    fun checkSign(number: Int): String =
      TODO()

    fun main() {
      println(checkSign(-19))  // negative
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package ifExpressionsExercise1

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestIfExpressionsExercise1 {
      private fun checkFunction(number: Int, sign: String) {
        Assert.assertEquals("""checkSign($number) should return "$sign"""",
          sign, checkSign(number))
      }

      @Test(timeout = TIMEOUT)
      fun test1Positive() = checkFunction(10, "positive")

      @Test(timeout = TIMEOUT)
      fun test2Zero() = checkFunction(0, "zero")

      @Test(timeout = TIMEOUT)
      fun test3Negative() = checkFunction(-10, "negative")
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Programming+Basics+%2F+if+Expressions+%2F+Exercise1
status: Unchecked
record: -1

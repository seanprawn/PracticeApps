type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 90
    length: 150
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 91
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: |-
      var i = 1
        for (c in s) {
          if (i % 5 == 0 && c != ' ') {
            println(c)
          }
          if (c != ' ') i++
        }
  text: |-
    // Summary1/Task6.kt
    package summaryIExercise6

    fun everyFifthNonWhitespace(s: String) {
      TODO()
    }

    fun main() {
      everyFifthNonWhitespace("abc d e fgh ik")
    }
    /* Output:
    e
    k
    */
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package summaryIExercise6

    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT
    import util.runAndCheckSystemOutput

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestSummaryIExercise6 {
      private fun testInput(s: String) {
        val expected = s.toList()
          .filter { it != ' ' }
          .filterIndexed { index, _ -> index % 5 == 4 }
          .joinToString("\n")
        runAndCheckSystemOutput("Wrong result for 'everyFifthNonWhitespace()'",
          expected) {
          everyFifthNonWhitespace(s)
        }
      }

      @Test(timeout = TIMEOUT)
      fun test1() = testInput("abc d e fgh ik")

      @Test(timeout = TIMEOUT)
      fun test2() = testInput("12  3  4  5 6   789  0")

      @Test(timeout = TIMEOUT)
      fun test3() = testInput("*       *")

      @Test(timeout = TIMEOUT)
      fun test4() = testInput("1               2            345")
    }
  learner_created: false
status: Solved
record: -1

type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 53
    length: 19
    placeholder_text: // isValidCharacter
    initial_state:
      length: 19
      offset: 53
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      fun isValidCharacter(ch: Char): Boolean = ch == '_' ||
        ch in 'a'..'z' || ch in 'A'..'Z' ||
        ch in '0'..'9'
  - offset: 120
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 120
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      if (s.isEmpty() || s[0] in '0'..'9') return false
        for (ch in s) {
          if (!isValidCharacter(ch)) return false
        }
        return true
  text: |-
    // InKeyword/Task4.kt
    package theInKeywordExercise4

    // isValidCharacter

    fun isValidIdentifier(s: String): Boolean {
      TODO()
    }

    fun main() {
      println(isValidIdentifier("name"))  // true
      println(isValidIdentifier("0name"))  // false
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package theInKeywordExercise4

    import org.junit.Assert
    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.TIMEOUT

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestTheInKeywordExercise4 {

      private fun checkValidIdentifier(s: String) {
        Assert.assertTrue("'$s' is a valid identifier", isValidIdentifier(s))
      }

      private fun checkInvalidIdentifier(s: String) {
        Assert.assertFalse("'$s' is not a valid identifier", isValidIdentifier(s))
      }

      @Test(timeout = TIMEOUT)
      fun test01Simple() = checkValidIdentifier("name")

      @Test(timeout = TIMEOUT)
      fun test02StartsWithUnderscore() = checkValidIdentifier("_name")

      @Test(timeout = TIMEOUT)
      fun test03Underscore() = checkValidIdentifier("_")

      @Test(timeout = TIMEOUT)
      fun test04ContainsDigits() = checkValidIdentifier("n01")

      @Test(timeout = TIMEOUT)
      fun test05UpperCase() = checkValidIdentifier("NNN")

      @Test(timeout = TIMEOUT)
      fun test06Valid() = checkValidIdentifier("_N01")

      @Test(timeout = TIMEOUT)
      fun test07Empty() = checkInvalidIdentifier("")

      @Test(timeout = TIMEOUT)
      fun test08StartsWithDigit() = checkInvalidIdentifier("0name")

      @Test(timeout = TIMEOUT)
      fun test09ContainsIllegalCharacters() = checkInvalidIdentifier("&%$")

      @Test(timeout = TIMEOUT)
      fun test10FirstIllegal() = checkInvalidIdentifier("1_")

      @Test(timeout = TIMEOUT)
      fun test11SomeIllegal() = checkInvalidIdentifier("na me")

      @Test(timeout = TIMEOUT)
      fun test12SomeIllegal() = checkInvalidIdentifier("name.")

      @Test(timeout = TIMEOUT)
      fun test13SomeIllegal() = checkInvalidIdentifier(".name")
    }
  learner_created: false
feedback_link: |
  https://docs.google.com/forms/d/e/1FAIpQLSdkaliSwYkjiV21bZl0yP-In2g5p17sAQCfaGjyHx_QYMWTiQ/viewform?usp=pp_url&entry.189755027=Programming+Basics+%2F+The+in+Keyword+%2F+Exercise4
status: Unchecked
record: -1
